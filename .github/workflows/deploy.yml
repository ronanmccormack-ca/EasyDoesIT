name: Deploy Static Site

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: |
        npm install -g html-minifier-terser
    
    - name: Replace environment variables in config.json
      env:
        EMAILJS_SERVICE_ID: ${{ secrets.EMAILJS_SERVICE_ID }}
        EMAILJS_TEMPLATE_ID: ${{ secrets.EMAILJS_TEMPLATE_ID }}
      run: |
        echo "=== BEFORE replacement ==="
        if [ -f "./config.json" ]; then
          echo "Content around SERVICE_ID in config.json:"
          grep -n -C 2 "SERVICE_ID" ./config.json || echo "No SERVICE_ID found"
          echo "Content around TEMPLATE_ID in config.json:"
          grep -n -C 2 "TEMPLATE_ID" ./config.json || echo "No TEMPLATE_ID found"
        fi
        
        echo "=== Secrets check ==="
        echo "EMAILJS_SERVICE_ID length: ${#EMAILJS_SERVICE_ID}"
        echo "EMAILJS_SERVICE_ID starts with: ${EMAILJS_SERVICE_ID:0:8}..."
        echo "EMAILJS_TEMPLATE_ID length: ${#EMAILJS_TEMPLATE_ID}"
        echo "EMAILJS_TEMPLATE_ID starts with: ${EMAILJS_TEMPLATE_ID:0:8}..."

        # Show current directory and file structure
        echo "Current directory: $(pwd)"
        echo "Looking for config.json:"
        find . -type f -name "config.json"
        
        # Replace in config.json
        if [ -f "./config.json" ]; then
          echo "Found config.json in root, replacing variables..."
          sed -i "s/SERVICE_ID/${{ secrets.EMAILJS_SERVICE_ID }}/g" ./config.json  
          sed -i "s/TEMPLATE_ID/${{ secrets.EMAILJS_TEMPLATE_ID }}/g" ./config.json
        else
          echo "config.json not found in root, searching subdirectories..."
          find . -name "config.json" -type f -exec sed -i "s/SERVICE_ID/${{ secrets.EMAILJS_SERVICE_ID }}/g" {} \;
          find . -name "config.json" -type f -exec sed -i "s/TEMPLATE_ID/${{ secrets.EMAILJS_TEMPLATE_ID }}/g" {} \;
        fi
        
        # Verify replacements worked
        echo "=== AFTER replacement ==="
        if [ -f "./config.json" ]; then
          echo "Content after replacement (showing emailJs section):"
          grep -n -A 2 "emailJs" ./config.json || echo "No emailJs found"
        fi
        
        echo "Checking for remaining placeholders:"
        find . -name "config.json" -exec grep -l "SERVICE_ID\|TEMPLATE_ID" {} \; || echo "âœ“ All placeholders replaced successfully"

    - name: Setup Pages
      if: github.ref == 'refs/heads/main'
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        # Upload entire repository
        path: '.'

  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4